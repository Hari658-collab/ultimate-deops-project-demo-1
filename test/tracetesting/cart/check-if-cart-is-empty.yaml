<<<<<<< HEAD
<<<<<<< HEAD
# Copyright The OpenTelemetry Authors
# SPDX-License-Identifier: Apache-2.0

type: Test
spec:
  id: cart-check-if-cart-is-empty
  name: 'Cart: check if cart is empty'
  description: Check if the shopping cart has no items
  trigger:
    type: grpc
    grpc:
      protobufFile: ../../../pb/demo.proto
      address: ${var:CART_ADDR}
      method: oteldemo.CartService.GetCart
      request: |-
        {
             "userId": "1234"
        }
  specs:
  - name: It retrieved the cart items correctly
    selector: span[name="POST /oteldemo.CartService/GetCart"]
    assertions:
    - attr:grpc.status_code = 0
  - name: It returned no items
    selector: span[tracetest.span.type="general" name="Tracetest trigger"]
    assertions:
    - attr:tracetest.response.body | json_path '$.items' = "[]"
=======
=======
>>>>>>> e3cfa673a16b249f79fbbe636908819d58b798d2
# Copyright The OpenTelemetry Authors
# SPDX-License-Identifier: Apache-2.0

type: Test
spec:
  id: cart-check-if-cart-is-empty
  name: 'Cart: check if cart is empty'
  description: Check if the shopping cart has no items
  trigger:
    type: grpc
    grpc:
      protobufFile: ../../../pb/demo.proto
      address: ${var:CART_ADDR}
      method: oteldemo.CartService.GetCart
      request: |-
        {
             "userId": "1234"
        }
  specs:
  - name: It retrieved the cart items correctly
    selector: span[name="POST /oteldemo.CartService/GetCart"]
    assertions:
    - attr:grpc.status_code = 0
  - name: It returned no items
    selector: span[tracetest.span.type="general" name="Tracetest trigger"]
    assertions:
    - attr:tracetest.response.body | json_path '$.items' = "[]"
<<<<<<< HEAD
>>>>>>> 9594cd0 (chore: verify github actions)
=======
>>>>>>> e3cfa673a16b249f79fbbe636908819d58b798d2
